import { toRefs } from "../grammar";

export const base = toRefs([
    "character",
    "charCharacter",
    "stringCharacter",
    "commentCharacter",
    "lineComment",
    "multiComment",
    "comment",
    "letter",
    "digit",
    "newline",
    "commaOrNL",
    "identifier",
    "identifierHead",
    "identifierTail",
    "PathSegment",
] as const)

export const exprs = toRefs([
    "binaryDigit",
    "decimalDigit",
    "hexDigit",
    "intSuffix",
    "decimalBody",
    "binaryBody",
    "hexBody",
    "decimalLiteral",
    "binaryLiteral",
    "hexLiteral",
    "floatSuffix",
    "floatExponent",
    "intLiteral",
    "floatLiteral",
    "boolLiteral",
    "escapedChar",
    "charLiteral",
    "stringLiteral",
    "NestedExpression",
    "AccessExpression",
    "InvokeExpression",
    "PrefixExpression",
    "ThisExpression",
    "SuperExpression",
    "Term",
    "Expression",
    "TimesExpression",
    "PlusExpression",
    "RelationExpression",
    "EqualsExpression",
    "AndExpression",
    "OrExpression",
    "TernaryExpression",
    "AssignExpression",
] as const)

export const stmts = toRefs([
    "FunctionParam",
    "FunctionParams",
    "PrimaryParam",
    "PrimaryParams",
    "FunctionDef",
    "PropertyDef",
    "SuperTypes",
    "ClassDef",
    "TraitDef",
    "GetterDef",
    "SetterDef",
    "Statement",
    "StatementBody",
    "StatementBlock",
    "FunctionLikeDef",
    "Import",
    "ImportPath",
    "ImportSegment",
    "ImportValue",
    "ImportGroup",
    "File"
] as const)

export const types = toRefs([
    "Type",
    "TypePath",
    "TypeParams",
    "TypeArg",
    "TypeArgs",
    "TypeUnion",
    "WhereClause",
    "NullableTypes",
    "NestedType",
    "TypeBound"
] as const)